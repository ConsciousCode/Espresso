export proto UnaryExpression {
	let new(op, rhs) {
		this.op = op;
		this.rhs = rhs;
	}
}

export proto BinaryExpression {
	let new(op, lhs, rhs) {
		this.op = op;
		this.lhs = lhs;
		this.rhs = rhs;
	}
}

export proto Identifier {
	let new(value) {
		this.value = value;
	}
}

export proto Function {
	let new(name, params, body) {
		this.name = name;
		this.params = params;
		this.body = body;
	}
}

export proto IfExpression {
	let new(cond, body, alt) {
		this.cond = cond;
		this.body = body;
		this.alt = alt;
	}
}

export proto DoExpression {
	let new(body, loop) {
		this.body = body;
		this.loop = loop;
	}
}

export proto WhileStatement {
	let new(cond, body, alt) {
		this.cond = cond;
		this.body = body;
		this.alt = alt;
	}
}

export proto ForStatement {
	let new(head, body, alt) {
		this.head = head;
		this.body = body;
		this.alt = alt;
	}
}

export proto ReturnStatement {
	let new(value) {
		this.value = value;
	}
}

export proto WithStatement {
	let new(value, name, body) {
		this.value = value;
		this.name = name;
		this.body = body;
	}
}

export proto Literal {
	let new(value) {
		this.value = value;
	}
}

export proto YieldExpression {
	let new(value) {
		this.value = value;
	}
}

export proto FailStatement {
	let new(value) {
		this.value = value;
	}
}
